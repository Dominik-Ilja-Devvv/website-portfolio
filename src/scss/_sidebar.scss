// TODO:
// --------------------
// > 1.  Create multiple layers of functionality based on the browser's capabilities
// > 1.1 Have sidebar only use properties that are accepted in older browser's
// > 1.2 Have sidebar use flex
// > 1.3 Have sidebar use grid

@use "variables" as var;
@use "mixins" as mix;

// setting a min-height screws with overflow-y

.sidebar {
  position: fixed;
  top: 0;
  bottom: 0;
  left: 0;
  z-index: var.$z-index-6;
  width: 100%;
  overflow-x: hidden;
  overflow-y: auto;
  background-color: var.$color-black;
  transform: translateX(100%);

  @supports (--css: variables) { background-color: var(--color-black); }

  @supports (display: flex) { display: flex; flex-direction: column; }

  @supports (display: grid) { grid-column: 1 / 3; }

  // ------------------------------
  // | ".js-mobile" is added and taken away through JavaScript when the menu
  // | is toggled. Adding the transition property directly to ".sidebar" causes
  // | the menu to transition its position when switching between
  // | the mobile and desktop version. Meaning the menu is seen when adjusting
  // | the screen between mobile and desktop.
  // |
  // | If we add the transition to when the menu is active the transition only
  // | works one way. The solution was to add it to ".js-mobile" which allows the menu
  // | to transition between open and closed as long as this class is there.
  // ------------------------------

  &.js-mobile { transition: all 0.75s; }

  &.active { transform: translateX(0); }

  @media only screen and (min-width: var.$bp-6) {
    width: 12.5rem;
    height: 100vh;
    transform: translateX(0);

    @supports (display:grid) { grid-column: 1 / 2; }
  }
}

.sidebar .logo {
  position: relative;
  width: 100%;
  height: 10.25rem;

  @supports (display: flex) {
    @include mix.center-flex;
    position: unset;
    height: unset;
    padding: 2rem 1rem;
  }

  img {
    @include mix.center-no-flex;
    width: 6.25rem;
    height: 6.25rem;

    @supports (display: flex) { @include mix.undo-center-no-flex; }
  }
}

.sidebar .divider {
  margin-top: 1rem;
  margin-bottom: 1rem;
  background-color: var.$color-muted;

  @supports (--css: variables) { background-color: var(--color-muted); }

  @media only screen and (min-width: var.$bp-6) {
    margin-top: 0;
    margin-bottom: 2rem;
    background-color: var.$color-muted;

    @supports (--css: variables) { background-color: var(--color-muted); }
  }
}

.sidebar .nav {
  position: relative;

  &__menu { @include mix.remove-list-style; }

  &__item { text-align: center; }

  &__link {
    display: inline-block;
    width: 100%;
    padding-top: 1.5rem;
    padding-bottom: 1.5rem;
    font-size: 1.5rem;
    color: #fff;
    text-decoration: none;
    transition: all 0.25s;

    &:hover, &:focus {
      color: var.$color-primary;
      background-color: rgba(var.$color-muted, 0.1);

      @supports (--css: variables) { color: var(--color-primary); }
    }

    &:focus { border-style: solid; }
  }
}

.sidebar .social-icons {
  padding-top: 1.5rem;
  padding-bottom: 1.5rem;
  text-align: center;

  @media (min-height: var.$bp-3) {
    position: absolute;
    bottom: 1rem;
    left: 50%;
    transform: translateX(-50%);
  }
}
