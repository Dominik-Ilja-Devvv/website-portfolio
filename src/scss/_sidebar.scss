// TODO:
// --------------------
// > 1.  Create multiple layers of functionality based on the browser's capabilities
// > 1.1 Have sidebar only use properties that are accepted in older browser's
// > 1.2 Have sidebar use flex
// > 1.3 Have sidebar use grid

@use "variables" as var;

// setting a min-height screws with overflow-y

.sidebar {
  position: fixed;
  top: 0;
  bottom: 0;
  left: 0;
  z-index: 5;
  width: 100%;
  overflow-x: hidden;
  overflow-y: auto;
  background-color: var.$color-black;
  transform: translateX(100%);

  @supports (--css: variabels) { background-color: var(--color-black); }

  @supports (display: flex) {
    display: flex;
    flex-direction: column;
  }
  @supports (display: grid) {
    grid-column: 1 / 3;
  }

  &.js-mobile { transition: all 0.75s; }

  &.active { transform: translateX(0); }

  @media only screen and (min-width: var.$bp-6) {
    width: 12.5rem;
    height: 100vh;
    transform: translateX(0);

    @supports (display:grid) {
      grid-column: 1 / 2;
    }
  }
}

.sidebar .logo {
  position: relative;
  width: 100%;
  height: 132px;

  @supports (display: flex) {
    position: static;
    display: flex;
    align-items: center;
    justify-content: center;
    height: auto;
    padding: 1rem;
  }

  img {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 100px;
    height: 100px;
    transform: translate(-50%, -50%);

    @supports (display: flex) {
      position: static;
      height: auto;
      transform: none;
    }
  }
}

.sidebar .divider {
  margin-top: 1rem;
  margin-bottom: 1rem;
  background-color: var.$color-muted;

  @supports (--css: variables) { background-color: var(--color-muted); }

  @media only screen and (min-width: 1200px) {
    margin-top: 2rem;
    margin-bottom: 2rem;
    background-color: var.$color-muted;

    @supports (--css: variables) { background-color: var(--color-muted); }
  }
}

.sidebar .nav {
  position: relative;

  &__menu {
    padding: 0;
    margin: 0;
    list-style: none;
  }

  &__item {
    text-align: center;
  }

  &__link {
    display: inline-block;
    width: 100%;
    padding-top: 1.5rem;
    padding-bottom: 1.5rem;
    font-size: 1.5rem;
    color: #fff;
    text-decoration: none;
    transition: all 0.25s;

    &:hover, &:focus {
      color: var.$color-primary;
      background-color: rgba(var.$color-muted, 0.1);

      @supports (--css: variables) { color: var(--color-primary); }
    }

    &:focus {
      border-style: solid;
    }
  }
}

.sidebar .social-icons {
  position: relative;
  width: 100%;
  height: 56px;

  @media (min-height: var.$bp-2) {
    position: absolute;
    bottom: 1rem;
    left: 50%;
    transform: translateX(-50%);
  }

  @supports (display: flex) {
    display: flex;
    flex: 1;
    align-items: flex-end;
    justify-content: center;
    margin-bottom: 1rem;
  }

  &__inner {
    position: absolute;
    bottom: 0;
    width: 100%;
    text-align: center;

    @supports (display: flex) {
      display: flex;
      align-items: end;
      justify-content: center;
    }
  }

  $-link-dimensions: 2.25rem;
  $-svg-dimensions: $-link-dimensions * 0.55;

  svg {
    position: absolute;
    top: 50%;
    left: 50%;

    width: $-svg-dimensions;
    height: $-svg-dimensions;
    transition: all 0.35s;
    transform: translate(-50%, -50%);
    fill: var.$color-primary-faded;

    @supports (--css: variables) { fill: var(--color-primary-faded); }

    @supports (display: flex) {
      position: static;
      top: auto;
      left: auto;
      transform: none;
    }
  }

  .link {
    position: relative;
    display: inline-block;
    width: $-link-dimensions;
    height: $-link-dimensions;
    margin-right: 8px;
    text-decoration: none;
    background-color: #222223;
    border-radius: 50%;

    @supports (display: flex) {
      display: flex;
      align-items: center;
      justify-content: center;

      &:not(:last-child) { margin-right: 1rem; }
    }

    &:hover svg {
      fill: var.$color-primary; // transition fill is not supported in IE 11

      @supports (--css: variables) { fill: var(--color-primary, var.$color-primary); }
    }
  }
}
